################# to be added in properties files

#Mail service properties
mail.username=test2942gsg@gmail.com
mail.password=admin#123
mail.authflag=true
mail.host= smtp.gmail.com
mail.socketport=465
mail.ssl=true

# Prod Mail service properties
#mail.username=gsgprojects@aurionpro.com
#mail.password=Dec@2017
#mail.authflag=true
#mail.host= smtp.gmail.com
#mail.socketport=587
#mail.ssl=false

#SMS properities

sms.channel= 2

#Hr Mail
hr.mail = jayati.mehta@aurionpro.com
hr.hrmailsubject= Notification Mail: Employee found with critical health status
hr.hrmailcontent = Dear HR, <br><br> USER's heath status found critical. Details shared below: <br><br> Employee Name : USER <br/>Employee Code : EMPCODE <br/> Department : DEPARTMENT <br/> Manager Name : MANAGER <br/> Please take necessary action.<br><br>Regards,<br>IPMS Team

##################################################################################

####################### to be added in pom##############################


<dependency>
		<groupId>com.vladmihalcea</groupId>
   		 <artifactId>hibernate-types-52</artifactId>
    	<version>2.3.4</version>
	</dependency> 
#################################################################################

######################### VIew Scripts####################################

CREATE OR REPLACE VIEW assetmgmt.assettpaview AS 
 SELECT a.entityid,
    a.isdeleted,
    a.organizationid,
    a.assetname,
    a.assetstatus,
    a.assettag,
    a.deliverychallanno,
    a.depreciation,
    a.eol,
    a.location,
    a.notes,
    a.orderno,
    a.productid,
    a.projectname AS projectid,
    a.purchasedate,
    a.serialno,
    a.vendorname,
    a.warrantytilldate,
    p.category,
    p.productname,
    p.subcategory,
    l.state,
    l.district,
    l.city,
    l.policestation,
    l.locationid,
    pr.projectname,
    p.manufacturer,
    p.model
   FROM assetmgmt.assetmaster a
     LEFT JOIN assetmgmt.productmaster p ON a.productid = p.entityid
     LEFT JOIN locationmaster l ON a.location::text = l.locationid::text
     LEFT JOIN projectmgmt.project pr ON a.projectname = pr.entityid
  WHERE (p.category::text <> ALL (ARRAY['Power Supply'::character varying::text, 'Fiber'::character varying::text])) OR p.category::text = 'Fiber'::text AND a.projectname::text = 'EDGE RC I'::text;

ALTER TABLE assetmgmt.assettpaview
  OWNER TO postgres;

  CREATE OR REPLACE VIEW assetmgmt.assetview AS 
 SELECT a.entityid,
    a.isdeleted,
    a.organizationid,
    a.assetname,
    a.assetstatus,
    a.assettag,
    a.deliverychallanno,
    a.depreciation,
    a.eol,
    a.location,
    a.notes,
    a.orderno,
    a.productid,
    a.projectname AS projectid,
    a.purchasedate,
    a.serialno,
    a.vendorname,
    a.warrantytilldate,
    p.category,
    p.productname,
    p.subcategory,
    l.state,
    l.district,
    l.city,
    l.policestation,
    l.locationid,
    pr.projectname,
    p.manufacturer,
    p.model
   FROM assetmgmt.assetmaster a
     LEFT JOIN assetmgmt.productmaster p ON a.productid = p.entityid
     LEFT JOIN locationmaster l ON a.location::text = l.locationid::text
     LEFT JOIN projectmgmt.project pr ON a.projectname = pr.entityid;

ALTER TABLE assetmgmt.assetview
  OWNER TO postgres;
  
  CREATE OR REPLACE VIEW assetmgmt.dcview AS 
 SELECT dc.entityid,
    dc.isdeleted,
    dc.organizationid,
    dc.challanattachment,
    dc.consigneecontact,
    dc.consigneename,
    dc.consignor,
    dc.contactperson,
    dc.dcdate,
    dc.dcno,
    dc.fulladdress,
    dc.gstno,
    dc.mobileno,
    dc.printflag,
    dc.projectname AS projectid,
    dc.shippedto,
    p.party_name AS partyname,
    concat(a.address1, ' ', a.address2, ' ', a.landmark, ' ', a.city, ' ', a.district, ' ', a.state, ' ', a.country, ' - ', a.pin_code) AS address,
    pr.projectname
   FROM assetmgmt.deliverchallan dc
     LEFT JOIN ordermgmt.addressmaster a ON a.entityid = dc.fulladdress
     LEFT JOIN ordermgmt.partymaster p ON p.entityid = dc.consignor
     LEFT JOIN projectmgmt.project pr ON dc.projectname = pr.entityid;

ALTER TABLE assetmgmt.dcview
  OWNER TO postgres;
  
  CREATE OR REPLACE VIEW assetmgmt.interdistrict_dc_view AS 
 SELECT dc.entityid,
    dc.isdeleted,
    dc.organizationid,
    dc.challanattachment,
    dc.consigneecontact,
    dc.consigneename,
    dc.contactperson,
    dc.dcdate,
    dc.dcno,
    dc.mobileno,
    dc.printflag,
    dc.projectname AS projectid,
    dc.shippedto,
    pr.projectname,
    dc.dcstatus,
    task.entityid AS taskid
   FROM assetmgmt.interdistrictdc dc
     LEFT JOIN projectmgmt.project pr ON dc.projectname = pr.entityid
     LEFT JOIN assetmgmt.interdistrict_dc_taskmaster task ON task.dcno::text = dc.dcno::text;

ALTER TABLE assetmgmt.interdistrict_dc_view
  OWNER TO postgres;
  
  CREATE OR REPLACE VIEW assetmgmt.oem_dc_view AS 
 SELECT dc.entityid,
    dc.isdeleted,
    dc.organizationid,
    dc.challanattachment,
    dc.consigneecontact,
    dc.consigneename,
    dc.dcdate,
    dc.dcno,
    dc.printflag,
    dc.projectname AS projectid,
    dc.shippedto,
    pr.projectname,
    dc.dcstatus,
    task.entityid AS taskid
   FROM assetmgmt.oem_deliverchallan dc
     LEFT JOIN projectmgmt.project pr ON dc.projectname = pr.entityid
     LEFT JOIN assetmgmt.oem_dc_taskmaster task ON task.dcno::text = dc.dcno::text;

ALTER TABLE assetmgmt.oem_dc_view
  OWNER TO postgres;
  
  CREATE OR REPLACE VIEW authentication.user_view AS 
 SELECT p.entityid,
    p.employeecode,
    concat(p.firstname, ' ', p.lastname) AS profilename,
    p.emailid AS useremail,
    p.managerid,
    concat(up.firstname, ' ', up.lastname) AS managername,
    up.emailid AS manager
   FROM authentication.userprofile p
     JOIN authentication.userprofile up ON p.managerid = up.entityid;

ALTER TABLE authentication.user_view
  OWNER TO postgres;
  
 
################### 22-07-2020 ###########################################
alter table ticketmgmt.currencymaster add column inr_value numeric(15,2);
alter table ordermgmt.partymaster add column organisation_id bigint;
alter table ordermgmt.addressmaster add column fulladdress character varying(500);
alter table ordermgmt.constant_master add column organisation_id bigint not null;


#######
-- View: ordermgmt.product_details_view
-- DROP VIEW ordermgmt.product_details_view;
CREATE OR REPLACE VIEW ordermgmt.product_details_view AS
 SELECT pd.entityid,
    pd.createdby,
    pd.createddate,
    pd.isdeleted,
    pd.organizationid,
    pd.updatedby,
    pd.updateddate,
    pd.amount,
    pd.base_uom_data,
    pd.cgst,
    pd.cgst_amount,
    pd.description,
    pd.discount,
    pd.discount_amount,
    pd.final_amount,
    pd.hsn_id,
    pd.igst,
    pd.igst_amount,
    pd.product_name,
    pd.product_name_with_desc,
    pd.quantity,
    pd.rate,
    pd.service_tax,
    pd.sgst,
    pd.sgst_amount,
    pd.total_amount,
    pd.total_discount,
    pd.vat,
    pd.purchase_order_no,
    pm.productname AS product,
    pm.description AS product_desc,
    pm.baseuom,
    hm.entityid AS tax_id
   FROM ordermgmt.product_details pd
     LEFT JOIN assetmgmt.productmaster pm ON pd.product_name::bpchar = pm.entityid::bpchar
     LEFT JOIN assetmgmt.hsnmaster hm ON pd.hsn_id::bpchar = hm.hsncode::bpchar;

ALTER TABLE ordermgmt.product_details_view
    OWNER TO postgres;

########
-- View: ordermgmt.purchase_order_view

-- DROP VIEW ordermgmt.purchase_order_view;

CREATE OR REPLACE VIEW ordermgmt.purchase_order_view AS
 SELECT p.entityid,
    p.createdby,
    p.createddate,
    p.isdeleted,
    p.organizationid,
    p.updatedby,
    p.updateddate,
    p.purchase_order_no,
    p.order_date,
    p.po_made_from,
    p.rc_id,
    p.order_type,
    p.mode_of_payment,
    p.suppliers_reference,
    p.other_reference,
    p.dispatch_through,
    p.currency,
    p.delivery_term,
    p.invoice_to_address,
    p.supplier_details,
    p.bill_to_address,
    p.ship_to_address,
    p.bill_from_state,
    p.department,
    p.account_name,
    p.terms_conditions,
    p.uploaded_terms_annexure,
    p.additional_terms,
    p.approval_status,
    p.signed_copy,
    p.bill_from_gst_no,
    p.bill_to_gst_no,
    p.supplier_name,
    p.buyer_name,
    p.include_terms,
    p.grand_total,
    p.total_taxes,
    p.total_without_taxes,
    p.discount_amt,
    p.is_historic_data,
    p.old_po_id,
    p.old_po_no,
    p.old_po_date,
    p.is_amended_flag,
    p.amended_po_id,
    p.payment_method,
    p.organisation_id,
    p.verify,
    p.verify_date,
    p.verified_by,
    p.verfied_po_attachment,
    p.mail_sent_date,
    p.mail_sent_by,
    p.po_copy,
    p.workflow_name,
    p.remark,
    pob.po_pushed_status,
    pob.po_pushed_date,
    poh.invoicetoname,
    poh.invoicetoaddressforhistory,
    poh.invoicetocontact,
    poh.invoicetophone,
    poh.invoicetoemail,
    poh.suppliername,
    poh.supplieraddress,
    poh.suppliercontact,
    poh.supplierphone,
    poh.supplieremail,
    poh.billtoname,
    poh.billtoaddressforhistory,
    poh.billtocontact,
    poh.billtophone,
    poh.billtoemail,
    poh.billtogstin,
    poh.shiptoname,
    poh.shiptoaddressforhistory,
    poh.shiptocontact,
    poh.shiptophone,
    poh.shiptoemail,
    supparty.party_name AS supp_name,
    supparty.contact_person_name AS supp_contact_person,
    supparty.mobile_no AS supp_mob,
    supparty.email_id AS supp_email,
    buyparty.party_name AS buy_name,
    buyparty.contact_person_name AS buy_contact_person,
    buyparty.mobile_no AS buy_mob,
    buyparty.email_id AS buy_email,
    supadd.fulladdress AS suppaddress,
    supadd.city AS suppcity,
    supadd.district AS suppdist,
    supadd.state AS supstate,
    buyinvoiceadd.fulladdress AS buyinvoaddress,
    buyinvoiceadd.city AS buyinvocity,
    buyinvoiceadd.district AS buyinvodist,
    buyinvoiceadd.state AS buyinvostate,
    buybilltoadd.fulladdress AS buybilltoaddress,
    buybilltoadd.city AS buybilltocity,
    buybilltoadd.district AS buybilltodist,
    buybilltoadd.state AS buybilltostate,
    buybilltogst.gst_no AS buybilltogstno,
    buyshiptoadd.fulladdress AS buyshiptoaddress,
    buyshiptoadd.city AS buyshiptocity,
    buyshiptoadd.district AS buyshiptodist,
    buyshiptoadd.state AS buyshiptostate,
    supparty.price_list,
    supparty.contact_id,
    dept.departmentname,
    acct.projectname AS acc_name,
    cur.currency_symbol,
    payterm.entityid AS payment_term_id,
    paymethod.entityid AS payment_method_id,
    om.orgname
   FROM ordermgmt.purchase_order_master p
     LEFT JOIN ordermgmt.partymaster supparty ON p.supplier_name::bpchar = supparty.entityid::bpchar
     LEFT JOIN ordermgmt.addressmaster supadd ON p.supplier_details::bpchar = supadd.entityid::bpchar
     LEFT JOIN ordermgmt.partymaster buyparty ON p.buyer_name::bpchar = buyparty.entityid::bpchar
     LEFT JOIN ordermgmt.addressmaster buyinvoiceadd ON p.invoice_to_address::bpchar = buyinvoiceadd.entityid::bpchar
     LEFT JOIN ordermgmt.addressmaster buybilltoadd ON p.bill_to_address::bpchar = buybilltoadd.entityid::bpchar
     LEFT JOIN ordermgmt.gstmaster buybilltogst ON buybilltoadd.state::bpchar = buybilltogst.state::bpchar AND buyparty.entityid::bpchar = buybilltogst.party_id::bpchar
     LEFT JOIN ordermgmt.addressmaster buyshiptoadd ON p.ship_to_address::bpchar = buyshiptoadd.entityid::bpchar
     LEFT JOIN authentication.department dept ON p.department::bpchar = dept.entityid::bpchar
     LEFT JOIN projectmgmt.project acct ON p.account_name::bpchar = acct.entityid::bpchar
     LEFT JOIN authentication.organization om ON p.organisation_id::bpchar = om.entityid::bpchar
     LEFT JOIN ticketmgmt.currencymaster cur ON p.currency::bpchar = cur.currency_name::bpchar
     LEFT JOIN ordermgmt.constant_master payterm ON p.mode_of_payment::bpchar = payterm.value::bpchar AND payterm.type::text = 'PM'::text AND p.organisation_id::bpchar = payterm.organisation_id::bpchar
     LEFT JOIN ordermgmt.constant_master paymethod ON p.payment_method::bpchar = paymethod.value::bpchar AND paymethod.type::text = 'PMethod'::text AND p.organisation_id::bpchar = paymethod.organisation_id::bpchar
     LEFT JOIN ordermgmt.purchase_order_history_details poh ON p.entityid::bpchar = poh.purchase_order_id::bpchar
     LEFT JOIN ordermgmt.purchase_order_open_bravo_details pob ON p.entityid::bpchar = pob.purchase_order_id::bpchar;

ALTER TABLE ordermgmt.purchase_order_view
    OWNER TO postgres;

#############
-- Table: ordermgmt.boq

-- DROP TABLE ordermgmt.boq;

CREATE TABLE ordermgmt.boq
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    account_id bigint NOT NULL,
    boq_approval_status character varying(50) COLLATE pg_catalog."default",
    boq_date bigint NOT NULL,
    boq_no character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT boq_pkey PRIMARY KEY (entityid),
    CONSTRAINT uk_1sxoe350fyentplke4br8we7g UNIQUE (boq_no),
    CONSTRAINT uk_atqj5cklxjd3d16w02um58e2e UNIQUE (account_id),
    CONSTRAINT boq_account_id_check CHECK (account_id >= 1),
    CONSTRAINT boq_boq_date_check CHECK (boq_date >= 1)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.boq
    OWNER to postgres;
   
#############
-- Table: ordermgmt.boq_audit_trail

-- DROP TABLE ordermgmt.boq_audit_trail;

CREATE TABLE ordermgmt.boq_audit_trail
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    boq_id bigint,
    operation character varying(20) COLLATE pg_catalog."default",
    product_id bigint,
    quantity integer,
    rate double precision,
    CONSTRAINT boq_audit_trail_pkey PRIMARY KEY (entityid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.boq_audit_trail
    OWNER to postgres;

#############
-- Table: ordermgmt.boq_product_child

-- DROP TABLE ordermgmt.boq_product_child;

CREATE TABLE ordermgmt.boq_product_child
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    product_id bigint NOT NULL,
    quantity integer NOT NULL,
    rate double precision NOT NULL,
    boq_id bigint NOT NULL,
    CONSTRAINT boq_product_child_pkey PRIMARY KEY (entityid),
    CONSTRAINT uk92lyj9x0kwxvyr58afi6a7ye2 UNIQUE (boq_id, product_id),
    CONSTRAINT fknrjke9m9u8sjl3yf44yb03lmf FOREIGN KEY (boq_id)
        REFERENCES ordermgmt.boq (entityid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.boq_product_child
    OWNER to postgres;

##############
-- Table: ordermgmt.boq_task

-- DROP TABLE ordermgmt.boq_task;

CREATE TABLE ordermgmt.boq_task
(
    boq_id bigint NOT NULL,
    entityid bigint NOT NULL,
    CONSTRAINT boq_task_pkey PRIMARY KEY (entityid),
    CONSTRAINT fk380r2apujtvrgewr61wv726g FOREIGN KEY (entityid)
        REFERENCES public.taskmaster (entityid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.boq_task
    OWNER to postgres;

#############
-- Table: ordermgmt.grn_master

-- DROP TABLE ordermgmt.grn_master;

CREATE TABLE ordermgmt.grn_master
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    approval_status character varying(255) COLLATE pg_catalog."default",
    dc_copy_upload character varying(255) COLLATE pg_catalog."default",
    delivery_challan_date bigint,
    delivery_challan_no character varying(255) COLLATE pg_catalog."default",
    delivery_date bigint NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    grn_date bigint NOT NULL,
    grn_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    invoice_date bigint,
    invoice_no character varying(255) COLLATE pg_catalog."default",
    lr_copy_upload character varying(255) COLLATE pg_catalog."default",
    po_no bigint,
    transporter_name character varying(255) COLLATE pg_catalog."default",
    vehicle_no character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT grn_master_pkey PRIMARY KEY (entityid),
    CONSTRAINT uk_hqisa7vj9q1dgtryafvo3s7bn UNIQUE (grn_number)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.grn_master
    OWNER to postgres;

#############
-- Table: ordermgmt.grn_product_details

-- DROP TABLE ordermgmt.grn_product_details;

CREATE TABLE ordermgmt.grn_product_details
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    accepted_quantity integer,
    grn_id bigint NOT NULL,
    product_id bigint NOT NULL,
    quantity integer,
    received_quantity integer,
    rejected_quantity integer,
    CONSTRAINT grn_product_details_pkey PRIMARY KEY (entityid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.grn_product_details
    OWNER to postgres;

#############
-- Table: ordermgmt.prs_master

-- DROP TABLE ordermgmt.prs_master;

CREATE TABLE ordermgmt.prs_master
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    approval character varying(5) COLLATE pg_catalog."default",
    approval_status character varying(100) COLLATE pg_catalog."default",
    approved_by character varying(100) COLLATE pg_catalog."default",
    attached_bill character varying(255) COLLATE pg_catalog."default",
    bill_no character varying(255) COLLATE pg_catalog."default",
    bill_type character varying(255) COLLATE pg_catalog."default",
    checked_invoice_copy character varying(5) COLLATE pg_catalog."default",
    checklist character varying(255) COLLATE pg_catalog."default",
    department character varying(50) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    grn_id bigint,
    invoice_amount double precision,
    invoice_date bigint,
    invoice_file_upload character varying(500) COLLATE pg_catalog."default",
    invoice_no character varying(255) COLLATE pg_catalog."default",
    is_utility_payment character varying(5) COLLATE pg_catalog."default",
    issue_cheque_to bigint,
    location character varying(50) COLLATE pg_catalog."default",
    note character varying(255) COLLATE pg_catalog."default",
    office character varying(50) COLLATE pg_catalog."default",
    payment_due_date bigint,
    po_copy character varying(5) COLLATE pg_catalog."default",
    project_name bigint,
    prs_date bigint,
    prs_no character varying(255) COLLATE pg_catalog."default",
    purchase_order_no bigint,
    quotation character varying(5) COLLATE pg_catalog."default",
    request_by character varying(50) COLLATE pg_catalog."default",
    signature character varying(255) COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default",
    supporting_documents character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT prs_master_pkey PRIMARY KEY (entityid),
    CONSTRAINT uk_rb1w61icm4pt5xvcub144sde6 UNIQUE (prs_no)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.prs_master
    OWNER to postgres;

############
-- Table: ordermgmt.prstask

-- DROP TABLE ordermgmt.prstask;

CREATE TABLE ordermgmt.prstask
(
    prs_id bigint NOT NULL,
    upload_file character varying(255) COLLATE pg_catalog."default",
    entityid bigint NOT NULL,
    CONSTRAINT prstask_pkey PRIMARY KEY (entityid),
    CONSTRAINT fkdi3ytt226hjtk0cuoxsapfc3m FOREIGN KEY (entityid)
        REFERENCES public.taskmaster (entityid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.prstask
    OWNER to postgres;

############
-- View: ordermgmt.prs_view

-- DROP VIEW ordermgmt.prs_view;

CREATE OR REPLACE VIEW ordermgmt.prs_view AS
 SELECT p.entityid,
    p.prs_no,
    p.prs_date,
    p.purchase_order_no,
    p.issue_cheque_to,
    p.invoice_no,
    p.invoice_date,
    p.invoice_amount,
    p.payment_due_date,
    p.description,
    p.note,
    p.department,
    p.project_name,
    p.approval_status,
    p.location,
    p.request_by,
    p.approved_by,
    p.signature,
    p.checklist,
    p.invoice_file_upload,
    p.createdby,
    p.createddate,
    p.updatedby,
    p.updateddate,
    p.quotation,
    p.po_copy,
    p.checked_invoice_copy,
    p.supporting_documents,
    p.approval,
    p.grn_id,
    p.is_utility_payment,
    p.office,
    p.bill_type,
    p.bill_no,
    p.attached_bill,
    p.isdeleted,
    p.organizationid,
    po.purchase_order_no AS purchase_order_number,
    COALESCE(po.total_without_taxes, 0::numeric::double precision) AS total_without_taxes,
    COALESCE(po.total_taxes, 0::numeric::double precision) AS total_taxes,
    COALESCE(po.grand_total, 0::numeric::double precision) AS grand_total,
    po.currency,
    COALESCE(curr.inr_value, 0::numeric) AS inr_value,
    COALESCE(po.grand_total, 0::numeric::double precision) * COALESCE(curr.inr_value, 0::numeric)::double precision AS po_grand_total_inr,
    pm.projectname AS project,
    pm.projectpin,
    pa.party_name,
        CASE
            WHEN p.purchase_order_no IS NULL THEN p.invoice_amount
            WHEN p.purchase_order_no IS NOT NULL THEN COALESCE(p.invoice_amount, 0::numeric::double precision) * COALESCE(curr.inr_value, 0::numeric)::double precision
            ELSE NULL::numeric::double precision
        END AS invoice_amt_inr
   FROM ordermgmt.prs_master p
     LEFT JOIN projectmgmt.project pm ON p.project_name::bpchar = pm.entityid::bpchar
     LEFT JOIN ordermgmt.partymaster pa ON p.issue_cheque_to::bpchar = pa.entityid::bpchar
     LEFT JOIN ordermgmt.purchase_order_master po ON p.purchase_order_no::bpchar = po.entityid::bpchar
     LEFT JOIN ticketmgmt.currencymaster curr ON po.currency::bpchar = curr.currency_name::bpchar;

ALTER TABLE ordermgmt.prs_view
    OWNER TO postgres;

#############
  //////////////////////////////////////////////////////////
  
  -- View: ticketmgmt.ticket_task_view

-- DROP VIEW ticketmgmt.ticket_task_view;

CREATE OR REPLACE VIEW ticketmgmt.ticket_task_view
 AS
 SELECT t.entityid,
    p.ticketstatus,
    t.ticketno,
    t.assignname,
    t.escalatedon,
    t.escalatedto,
    t.latitude,
    t.longitude,
    t.vendorname,
    t.contactemail AS email,
    u.firstname,
    tm.assetname,
    tm.location,
    tm.duedate,
    tm.resolution,
    p.updateddate,
    p.updatedby,
    p.organizationid,
    p.isdeleted,
    p.ticketowner,
    p.createdby,
    p.createddate,
    p.assetid,
    p.tickettype,
    p.tickettitle,
    p.otherproblemdescription,
    u.username,
    p.contactemail
   FROM ticketmgmt.tickettask t
     LEFT JOIN ticketmgmt.ticketmaster_view tm ON t.ticketno::text = tm.ticketno::text
     LEFT JOIN ticketmgmt.ticketmaster p ON t.ticketno::text = p.ticketno::text
     LEFT JOIN authentication.userprofile u ON t.assignname::text = u.entityid::text;

ALTER TABLE ticketmgmt.ticket_task_view
    OWNER TO postgres;

  
  
  
  -- View: ticketmgmt.ticketmaster_view

-- DROP VIEW ticketmgmt.ticketmaster_view;

CREATE OR REPLACE VIEW ticketmgmt.ticketmaster_view
 AS
 SELECT p.entityid,
    p.ticketstatus,
    p.ticketclosedtime,
    p.category,
    p.classifications,
    p.duedate,
    p.contactemail,
    p.channel,
    p.phone,
    p.tickettitle,
    p.resolution,
    p.subcategory,
    p.toaddress,
    p.accountname,
    p.description,
    p.contactname,
    p.ticketowner,
    p.tickettype,
    p.ticketno,
    p.resolutiondate,
    p.assetid,
    p.district,
    p.location,
    p.attachment,
    p.vehiclesused,
    p.otherproblemdesc,
    p.department,
    p.ticketcategory,
    p.ticketsubcategory,
    p.createdby,
    p.createddate,
    p.assettag,
    p.isdeleted,
    p.assignname,
    p.otherproblemdescription,
    p.draftflag,
    userpro.firstname AS username,
    userpro.mobilenumber,
    userpro.emailid,
    am.assetname,
    pro.projectname AS projetname
   FROM ticketmgmt.ticketmaster p
     LEFT JOIN assetmgmt.assetmaster pm ON p.assetid::bpchar = pm.entityid::bpchar
     LEFT JOIN assetmgmt.assetmaster am ON p.assetid::bpchar = am.entityid::bpchar
     LEFT JOIN authentication.userprofile userpro ON p.ticketowner::bpchar = userpro.entityid::bpchar
     LEFT JOIN projectmgmt.project pro ON p.accountname::bpchar = pro.entityid::bpchar;

ALTER TABLE ticketmgmt.ticketmaster_view
    OWNER TO postgres;

  
  
  
  
  
  -- View: ticketmgmt.ticket_classifications_view

-- DROP VIEW ticketmgmt.ticket_classifications_view;

CREATE OR REPLACE VIEW ticketmgmt.ticket_classifications_view
 AS
 SELECT t.projectid,
    t.classificationvalue,
    p.projectname
   FROM ticketmgmt.ticketclassification t
     LEFT JOIN projectmgmt.project p ON t.projectid::bpchar = p.entityid::bpchar;

ALTER TABLE ticketmgmt.ticket_classifications_view
    OWNER TO postgres;

###################### 24-07-2020 ###########################################
alter table ordermgmt.purchase_order_master alter column organisation_id type bigint USING organisation_id::bigint;


-- View: ordermgmt.po_task_view
-- DROP VIEW ordermgmt.po_task_view;
CREATE OR REPLACE VIEW ordermgmt.po_task_view AS
 SELECT pt.entityid,
    pt.po_id,
    pt.po_rc_flag,
    pt.upload_file,
    t.createdby,
    t.createddate,
    t.isdeleted,
    t.organizationid,
    t.updatedby,
    t.updateddate,
    t.approvalstatus,
    t.assigntorole,
    t.assigntouser,
    t.remark,
    t.stagename,
    t.workflowname,
    po.purchase_order_no,
    po.approval_status AS po_approval_status,
    po.supplier_name,
    po.account_name,
    po.organisation_id
   FROM ordermgmt.potaskmaster pt
     LEFT JOIN taskmaster t ON pt.entityid::bpchar = t.entityid::bpchar
     LEFT JOIN ordermgmt.purchase_order_master po ON pt.po_id::bpchar = po.entityid::bpchar;

ALTER TABLE ordermgmt.po_task_view
    OWNER TO postgres;

##########################################################################################

-- Table: ordermgmt.rate_contract_master

-- DROP TABLE ordermgmt.rate_contract_master;

CREATE TABLE ordermgmt.rate_contract_master
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    account_name bigint,
    additional_terms character varying(255) COLLATE pg_catalog."default",
    approval_status character varying(255) COLLATE pg_catalog."default",
    bill_from_gst_no character varying(255) COLLATE pg_catalog."default",
    bill_from_state character varying(255) COLLATE pg_catalog."default",
    bill_to_address bigint,
    bill_to_gst_no character varying(255) COLLATE pg_catalog."default",
    buyer_name bigint,
    contract_date bigint,
    contract_type character varying(255) COLLATE pg_catalog."default",
    currency character varying(255) COLLATE pg_catalog."default",
    delivery_term character varying(255) COLLATE pg_catalog."default",
    department bigint,
    dispatch_through character varying(255) COLLATE pg_catalog."default",
    grand_total double precision,
    include_terms character varying(255) COLLATE pg_catalog."default",
    invoice_to_address bigint,
    is_historic_data character varying(255) COLLATE pg_catalog."default",
    max_limit double precision,
    mode_of_payment character varying(255) COLLATE pg_catalog."default",
    organisation_id bigint,
    other_reference character varying(255) COLLATE pg_catalog."default",
    rate_contract_no character varying(255) COLLATE pg_catalog."default",
    remark character varying(255) COLLATE pg_catalog."default",
    ship_to_address bigint,
    signed_copy character varying(255) COLLATE pg_catalog."default",
    supplier_details bigint,
    supplier_name bigint,
    suppliers_reference character varying(255) COLLATE pg_catalog."default",
    terms_conditions character varying(255) COLLATE pg_catalog."default",
    total_taxes double precision,
    total_without_taxes double precision,
    uploaded_terms_annexure character varying(255) COLLATE pg_catalog."default",
    valid_till bigint,
    workflow_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT rate_contract_master_pkey PRIMARY KEY (entityid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.rate_contract_master
    OWNER to postgres;

#########################################
-- Table: ordermgmt.rate_contract_product_details

-- DROP TABLE ordermgmt.rate_contract_product_details;

CREATE TABLE ordermgmt.rate_contract_product_details
(
    entityid bigint NOT NULL,
    createdby character varying(255) COLLATE pg_catalog."default",
    createddate bigint,
    isdeleted boolean,
    organizationid bigint,
    updatedby character varying(255) COLLATE pg_catalog."default",
    updateddate bigint,
    amount numeric(15,2),
    base_uom_data character varying(255) COLLATE pg_catalog."default",
    cgst numeric(15,2),
    cgst_amount numeric(15,2),
    description character varying(255) COLLATE pg_catalog."default",
    discount numeric(15,2),
    discount_amount numeric(15,2),
    final_amount numeric(15,2),
    hsn_id character varying(255) COLLATE pg_catalog."default",
    igst numeric(15,2),
    igst_amount numeric(15,2),
    product_name bigint,
    product_name_with_desc character varying(255) COLLATE pg_catalog."default",
    quantity numeric(15,2) NOT NULL,
    rate numeric(15,2) NOT NULL,
    service_tax numeric(15,2),
    sgst numeric(15,2),
    sgst_amount numeric(15,2),
    total_amount numeric(15,2),
    total_discount numeric(15,2),
    vat numeric(15,2),
    rate_contract_no bigint,
    CONSTRAINT rate_contract_product_details_pkey PRIMARY KEY (entityid),
    CONSTRAINT fk9lplutkpk4ekt0i5iq7akmv50 FOREIGN KEY (rate_contract_no)
        REFERENCES ordermgmt.rate_contract_master (entityid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.rate_contract_product_details
    OWNER to postgres;

############################################
-- View: ordermgmt.rate_contract_view

-- DROP VIEW ordermgmt.rate_contract_view;

CREATE OR REPLACE VIEW ordermgmt.rate_contract_view AS
 SELECT p.entityid,
    p.createdby,
    p.createddate,
    p.isdeleted,
    p.organizationid,
    p.updatedby,
    p.updateddate,
    p.rate_contract_no,
    p.contract_date,
    p.contract_type,
    p.mode_of_payment,
    p.suppliers_reference,
    p.other_reference,
    p.dispatch_through,
    p.currency,
    p.delivery_term,
    p.invoice_to_address,
    p.supplier_details,
    p.bill_to_address,
    p.ship_to_address,
    p.bill_from_state,
    p.department,
    p.account_name,
    p.terms_conditions,
    p.uploaded_terms_annexure,
    p.additional_terms,
    p.approval_status,
    p.signed_copy,
    p.bill_from_gst_no,
    p.bill_to_gst_no,
    p.supplier_name,
    p.buyer_name,
    p.include_terms,
    p.grand_total,
    p.total_taxes,
    p.total_without_taxes,
    p.is_historic_data,
    p.organisation_id,
    p.workflow_name,
    p.remark,
    p.valid_till,
    p.max_limit,
    poh.invoicetoname,
    poh.invoicetoaddressforhistory,
    poh.invoicetocontact,
    poh.invoicetophone,
    poh.invoicetoemail,
    poh.suppliername,
    poh.supplieraddress,
    poh.suppliercontact,
    poh.supplierphone,
    poh.supplieremail,
    poh.billtoname,
    poh.billtoaddressforhistory,
    poh.billtocontact,
    poh.billtophone,
    poh.billtoemail,
    poh.billtogstin,
    poh.shiptoname,
    poh.shiptoaddressforhistory,
    poh.shiptocontact,
    poh.shiptophone,
    poh.shiptoemail,
    supparty.party_name AS supp_name,
    supparty.contact_person_name AS supp_contact_person,
    supparty.mobile_no AS supp_mob,
    supparty.email_id AS supp_email,
    buyparty.party_name AS buy_name,
    buyparty.contact_person_name AS buy_contact_person,
    buyparty.mobile_no AS buy_mob,
    buyparty.email_id AS buy_email,
    supadd.fulladdress AS suppaddress,
    supadd.city AS suppcity,
    supadd.district AS suppdist,
    supadd.state AS supstate,
    buyinvoiceadd.fulladdress AS buyinvoaddress,
    buyinvoiceadd.city AS buyinvocity,
    buyinvoiceadd.district AS buyinvodist,
    buyinvoiceadd.state AS buyinvostate,
    buybilltoadd.fulladdress AS buybilltoaddress,
    buybilltoadd.city AS buybilltocity,
    buybilltoadd.district AS buybilltodist,
    buybilltoadd.state AS buybilltostate,
    buybilltogst.gst_no AS buybilltogstno,
    buyshiptoadd.fulladdress AS buyshiptoaddress,
    buyshiptoadd.city AS buyshiptocity,
    buyshiptoadd.district AS buyshiptodist,
    buyshiptoadd.state AS buyshiptostate,
    dept.departmentname,
    acct.projectname AS acc_name,
    cur.currency_symbol,
    om.orgname
   FROM ordermgmt.rate_contract_master p
     LEFT JOIN ordermgmt.partymaster supparty ON p.supplier_name::bpchar = supparty.entityid::bpchar
     LEFT JOIN ordermgmt.addressmaster supadd ON p.supplier_details::bpchar = supadd.entityid::bpchar
     LEFT JOIN ordermgmt.partymaster buyparty ON p.buyer_name::bpchar = buyparty.entityid::bpchar
     LEFT JOIN ordermgmt.addressmaster buyinvoiceadd ON p.invoice_to_address::bpchar = buyinvoiceadd.entityid::bpchar
     LEFT JOIN ordermgmt.addressmaster buybilltoadd ON p.bill_to_address::bpchar = buybilltoadd.entityid::bpchar
     LEFT JOIN ordermgmt.gstmaster buybilltogst ON buybilltoadd.state::bpchar = buybilltogst.state::bpchar AND buyparty.entityid::bpchar = buybilltogst.party_id::bpchar
     LEFT JOIN ordermgmt.addressmaster buyshiptoadd ON p.ship_to_address::bpchar = buyshiptoadd.entityid::bpchar
     LEFT JOIN authentication.department dept ON p.department::bpchar = dept.entityid::bpchar
     LEFT JOIN projectmgmt.project acct ON p.account_name::bpchar = acct.entityid::bpchar
     LEFT JOIN authentication.organization om ON p.organisation_id::bpchar = om.entityid::bpchar
     LEFT JOIN ticketmgmt.currencymaster cur ON p.currency::bpchar = cur.currency_name::bpchar
     LEFT JOIN ordermgmt.purchase_order_history_details poh ON p.entityid::bpchar = poh.purchase_order_id::bpchar;

ALTER TABLE ordermgmt.rate_contract_view
    OWNER TO postgres;

##################################################
-- View: ordermgmt.rc_product_details_view

-- DROP VIEW ordermgmt.rc_product_details_view;

CREATE OR REPLACE VIEW ordermgmt.rc_product_details_view AS
 SELECT pd.entityid,
    pd.createdby,
    pd.createddate,
    pd.isdeleted,
    pd.organizationid,
    pd.updatedby,
    pd.updateddate,
    pd.amount,
    pd.base_uom_data,
    pd.cgst,
    pd.cgst_amount,
    pd.description,
    pd.discount,
    pd.discount_amount,
    pd.final_amount,
    pd.hsn_id,
    pd.igst,
    pd.igst_amount,
    pd.product_name,
    pd.product_name_with_desc,
    pd.quantity,
    pd.rate,
    pd.service_tax,
    pd.sgst,
    pd.sgst_amount,
    pd.total_amount,
    pd.total_discount,
    pd.vat,
    pd.rate_contract_no,
    pm.productname AS product,
    pm.description AS product_desc,
    pm.baseuom,
    hm.entityid AS tax_id
   FROM ordermgmt.rate_contract_product_details pd
     LEFT JOIN assetmgmt.productmaster pm ON pd.product_name::bpchar = pm.entityid::bpchar
     LEFT JOIN assetmgmt.hsnmaster hm ON pd.hsn_id::bpchar = hm.hsncode::bpchar;

ALTER TABLE ordermgmt.rc_product_details_view
    OWNER TO postgres;

#####################################################
-- Table: ordermgmt.rctaskmaster

-- DROP TABLE ordermgmt.rctaskmaster;

CREATE TABLE ordermgmt.rctaskmaster
(
    po_rc_flag character varying(255) COLLATE pg_catalog."default",
    rc_id bigint NOT NULL,
    upload_file character varying(255) COLLATE pg_catalog."default",
    entityid bigint NOT NULL,
    CONSTRAINT rctaskmaster_pkey PRIMARY KEY (entityid),
    CONSTRAINT fkkfs46elmn8g0a8dytsi8ecxd1 FOREIGN KEY (entityid)
        REFERENCES public.taskmaster (entityid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ordermgmt.rctaskmaster
    OWNER to postgres;

##################################################
-- View: ordermgmt.rc_task_view

-- DROP VIEW ordermgmt.rc_task_view;

CREATE OR REPLACE VIEW ordermgmt.rc_task_view AS
 SELECT pt.entityid,
    pt.rc_id,
    pt.po_rc_flag,
    pt.upload_file,
    t.createdby,
    t.createddate,
    t.isdeleted,
    t.organizationid,
    t.updatedby,
    t.updateddate,
    t.approvalstatus,
    t.assigntorole,
    t.assigntouser,
    t.remark,
    t.stagename,
    t.workflowname,
    rc.rate_contract_no,
    rc.approval_status AS po_approval_status,
    rc.supplier_name,
    rc.account_name,
    rc.organisation_id
   FROM ordermgmt.rctaskmaster pt
     LEFT JOIN taskmaster t ON pt.entityid::bpchar = t.entityid::bpchar
     LEFT JOIN ordermgmt.rate_contract_master rc ON pt.rc_id::bpchar = rc.entityid::bpchar;

ALTER TABLE ordermgmt.rc_task_view
    OWNER TO postgres;

###################################################
-- View: ordermgmt.all_task_view

-- DROP VIEW ordermgmt.all_task_view;

CREATE OR REPLACE VIEW ordermgmt.all_task_view AS
 SELECT po.entityid,
    po.po_id,
    po.po_rc_flag,
    po.upload_file,
    po.createdby,
    po.createddate,
    po.isdeleted,
    po.organizationid,
    po.updatedby,
    po.updateddate,
    po.approvalstatus,
    po.assigntorole,
    po.assigntouser,
    po.remark,
    po.stagename,
    po.workflowname,
    po.purchase_order_no,
    po.po_approval_status,
    po.supplier_name,
    po.account_name,
    po.organisation_id
   FROM ordermgmt.po_task_view po
UNION ALL
 SELECT rc.entityid,
    rc.rc_id AS po_id,
    rc.po_rc_flag,
    rc.upload_file,
    rc.createdby,
    rc.createddate,
    rc.isdeleted,
    rc.organizationid,
    rc.updatedby,
    rc.updateddate,
    rc.approvalstatus,
    rc.assigntorole,
    rc.assigntouser,
    rc.remark,
    rc.stagename,
    rc.workflowname,
    rc.rate_contract_no AS purchase_order_no,
    rc.po_approval_status,
    rc.supplier_name,
    rc.account_name,
    rc.organisation_id
   FROM ordermgmt.rc_task_view rc;

ALTER TABLE ordermgmt.all_task_view
    OWNER TO postgres;

###################################################################################

